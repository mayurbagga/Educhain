{
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract ICLPoolManager",
                    "name": "_poolManager",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_user",
                    "type": "address"
                }
            ],
            "name": "addToWhitelist",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "int24",
                            "name": "tickLower",
                            "type": "int24"
                        },
                        {
                            "internalType": "int24",
                            "name": "tickUpper",
                            "type": "int24"
                        },
                        {
                            "internalType": "int256",
                            "name": "liquidityDelta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct ICLPoolManager.ModifyLiquidityParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "BalanceDelta",
                    "name": "",
                    "type": "int256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "afterAddLiquidity",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                },
                {
                    "internalType": "BalanceDelta",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "afterDonate",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "uint160",
                    "name": "",
                    "type": "uint160"
                },
                {
                    "internalType": "int24",
                    "name": "",
                    "type": "int24"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "afterInitialize",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "int24",
                            "name": "tickLower",
                            "type": "int24"
                        },
                        {
                            "internalType": "int24",
                            "name": "tickUpper",
                            "type": "int24"
                        },
                        {
                            "internalType": "int256",
                            "name": "liquidityDelta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct ICLPoolManager.ModifyLiquidityParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "BalanceDelta",
                    "name": "",
                    "type": "int256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "afterRemoveLiquidity",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                },
                {
                    "internalType": "BalanceDelta",
                    "name": "",
                    "type": "int256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        },
                        {
                            "internalType": "int256",
                            "name": "amountSpecified",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160"
                        }
                    ],
                    "internalType": "struct ICLPoolManager.SwapParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "BalanceDelta",
                    "name": "",
                    "type": "int256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "afterSwap",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                },
                {
                    "internalType": "int128",
                    "name": "",
                    "type": "int128"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "int24",
                            "name": "tickLower",
                            "type": "int24"
                        },
                        {
                            "internalType": "int24",
                            "name": "tickUpper",
                            "type": "int24"
                        },
                        {
                            "internalType": "int256",
                            "name": "liquidityDelta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct ICLPoolManager.ModifyLiquidityParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "beforeAddLiquidity",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "beforeDonate",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "uint160",
                    "name": "",
                    "type": "uint160"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "beforeInitialize",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "int24",
                            "name": "tickLower",
                            "type": "int24"
                        },
                        {
                            "internalType": "int24",
                            "name": "tickUpper",
                            "type": "int24"
                        },
                        {
                            "internalType": "int256",
                            "name": "liquidityDelta",
                            "type": "int256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "salt",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct ICLPoolManager.ModifyLiquidityParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "beforeRemoveLiquidity",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "components": [
                        {
                            "internalType": "Currency",
                            "name": "currency0",
                            "type": "address"
                        },
                        {
                            "internalType": "Currency",
                            "name": "currency1",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IHooks",
                            "name": "hooks",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IPoolManager",
                            "name": "poolManager",
                            "type": "address"
                        },
                        {
                            "internalType": "uint24",
                            "name": "fee",
                            "type": "uint24"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "parameters",
                            "type": "bytes32"
                        }
                    ],
                    "internalType": "struct PoolKey",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "bool",
                            "name": "zeroForOne",
                            "type": "bool"
                        },
                        {
                            "internalType": "int256",
                            "name": "amountSpecified",
                            "type": "int256"
                        },
                        {
                            "internalType": "uint160",
                            "name": "sqrtPriceLimitX96",
                            "type": "uint160"
                        }
                    ],
                    "internalType": "struct ICLPoolManager.SwapParams",
                    "name": "",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "beforeSwap",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                },
                {
                    "internalType": "BeforeSwapDelta",
                    "name": "",
                    "type": "int256"
                },
                {
                    "internalType": "uint24",
                    "name": "",
                    "type": "uint24"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getHooksRegistrationBitmap",
            "outputs": [
                {
                    "internalType": "uint16",
                    "name": "",
                    "type": "uint16"
                }
            ],
            "stateMutability": "pure",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "lockAcquired",
            "outputs": [
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "poolManager",
            "outputs": [
                {
                    "internalType": "contract ICLPoolManager",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_user",
                    "type": "address"
                }
            ],
            "name": "removeFromWhitelist",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "vault",
            "outputs": [
                {
                    "internalType": "contract IVault",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "whitelisted",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "user",
                    "type": "address"
                }
            ],
            "name": "AddedToWhitelist",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "user",
                    "type": "address"
                }
            ],
            "name": "RemovedFromWhitelist",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "HookNotImplemented",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidPool",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "LockFailure",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotPoolManager",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotSelf",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotVault",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        }
    ],
    "bytecode": "0x60c0806040523461012a57602081610c0b803803809161001f8285610141565b83398101031261012a57516001600160a01b0381169081810361012a5760805260405163fbfa77cf60e01b815290602090829060049082905afa908115610136575f916100f0575b5060a05233156100dd575f8054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610a929081610179823960805181610465015260a05181818161015301526105090152f35b631e4fbdf760e01b5f525f60045260245ffd5b90506020813d60201161012e575b8161010b60209383610141565b8101031261012a57516001600160a01b038116810361012a575f610067565b5f80fd5b3d91506100fe565b6040513d5f823e3d90fd5b601f909101601f19168101906001600160401b0382119082101761016457604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f803560e01c80631ffe6a58146107785780634b6a682d146107735780635304d44e146107735780636f6657cb1461071f578063715018a6146106c85780637aa43ce0146104d15780638ab1d681146106095780638da5cb5b146105e2578063972e19a214610580578063ab6291fe146104d6578063d533c4db146104d1578063d936547e14610494578063dc4c90d314610450578063e43252d71461038f578063e592dc93146102fa578063e8246c7f146102b3578063f2fde38b1461022e578063f961d1f414610182578063fbfa77cf1461013d5763fe70c9c9146100f6575f80fd5b3461013a5760ff60406101289261010c366108f5565b505050506001600160a01b0316815260016020522054166109ea565b60405163fe70c9c960e01b8152602090f35b80fd5b503461013a578060031936011261013a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461022a575f36600319011261022a576040516101c0810181811067ffffffffffffffff821117610216575f916101a09160405282815282602082015260016040820152826060820152600160808201528260a0820152600160c08201528260e082015282610100820152826101208201528261014082015282610160820152826101808201520152602060405160548152f35b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b3461022a57602036600319011261022a576102476107d6565b61024f610a36565b6001600160a01b031680156102a0575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b3461022a576102c1366108f5565b505050506001600160a01b03165f908152600160205260409020546102e89060ff166109ea565b60405163e8246c7f60e01b8152602090f35b3461022a5761016036600319011261022a576103146107d6565b60c036602319011261022a5760603660e319011261022a576101443567ffffffffffffffff811161022a5761034d903690600401610802565b50506001600160a01b03165f908152600160205260409020546103729060ff166109ea565b606060405163e592dc9360e01b81525f60208201525f6040820152f35b3461022a57602036600319011261022a576103a86107d6565b6103b0610a36565b6001600160a01b03165f8181526001602052604090205460ff1661040b57805f52600160205260405f20600160ff198254161790557fa850ae9193f515cbae8d35e8925bd2be26627fc91bce650b8652ed254e9cab035f80a2005b60405162461bcd60e51b815260206004820152601b60248201527f5573657220697320616c72656164792077686974656c697374656400000000006044820152606490fd5b3461022a575f36600319011261022a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461022a57602036600319011261022a576001600160a01b036104b56107d6565b165f526001602052602060ff60405f2054166040519015158152f35b610896565b3461022a57602036600319011261022a5760043567ffffffffffffffff811161022a57610507903690600401610802565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361057157610545604091602093610959565b815192839181835280519182918282860152018484015e5f828201840152601f01601f19168101030190f35b6362df054560e01b5f5260045ffd5b3461022a5761012036600319011261022a5761059a6107d6565b5060c036602319011261022a576105af6107ec565b506101043567ffffffffffffffff811161022a576105d1903690600401610802565b5050630a85dc2960e01b5f5260045ffd5b3461022a575f36600319011261022a575f546040516001600160a01b039091168152602090f35b3461022a57602036600319011261022a576106226107d6565b61062a610a36565b6001600160a01b03165f8181526001602052604090205460ff161561068357805f52600160205260405f2060ff1981541690557fcdd2e9b91a56913d370075169cefa1602ba36be5301664f752192bb1709df7575f80a2005b60405162461bcd60e51b815260206004820152601760248201527f55736572206973206e6f742077686974656c69737465640000000000000000006044820152606490fd5b3461022a575f36600319011261022a576106e0610a36565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461022a5761018036600319011261022a576107396107d6565b5060c036602319011261022a5760603660e319011261022a576101643567ffffffffffffffff811161022a576105d1903690600401610802565b610830565b3461022a5761014036600319011261022a576107926107d6565b5060c036602319011261022a576107a76107ec565b50610104358060020b0361022a576101243567ffffffffffffffff811161022a576105d1903690600401610802565b600435906001600160a01b038216820361022a57565b60e435906001600160a01b038216820361022a57565b9181601f8401121561022a5782359167ffffffffffffffff831161022a576020838186019501011161022a57565b3461022a5761014036600319011261022a576004356001600160a01b038116810361022a575060c036602319011261022a576101243567ffffffffffffffff811161022a57610883903690600401610802565b5050630a85dc2960e01b5f908152600490fd5b3461022a576101a036600319011261022a576004356001600160a01b038116810361022a575060c036602319011261022a5760803660e319011261022a576101843567ffffffffffffffff811161022a57610883903690600401610802565b9061018060031983011261022a576004356001600160a01b038116810361022a579160c060231982011261022a57602491608060e31983011261022a5760e491610164359067ffffffffffffffff821161022a5761095591600401610802565b9091565b5f9182918160405192839283378101838152039082305af1903d156109e2573d9167ffffffffffffffff83116102165760405192601f8101601f19908116603f0116840167ffffffffffffffff8111858210176102165760405283523d5f602085013e5b6109e057508051156109d157602081519101fd5b6314815f4760e31b5f5260045ffd5b565b6060916109bd565b156109f157565b60405162461bcd60e51b815260206004820152601960248201527f53656e646572206973206e6f742077686974656c6973746564000000000000006044820152606490fd5b5f546001600160a01b03163303610a4957565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220f41a1b5befe6e2ef18b4bf80060aa8f5c81b78ed843dd5f0ac5e64fee6006c3064736f6c634300081a0033",
    "n_constructor": 1,
    "solidity_code": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {CLHooks} from \"pancake-v4-core/src/pool-cl/libraries/CLHooks.sol\";\nimport {CLBaseHook} from \"./CLBaseHook.sol\";\nimport {ICLPoolManager} from \"pancake-v4-core/src/pool-cl/interfaces/ICLPoolManager.sol\";\nimport {PoolKey} from \"pancake-v4-core/src/types/PoolKey.sol\";\nimport {BeforeSwapDelta, BeforeSwapDeltaLibrary} from \"pancake-v4-core/src/types/BeforeSwapDelta.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract WhitelistHook is CLBaseHook, Ownable {\n    // Mapping to store whitelisted addresses\n    mapping(address => bool) public whitelisted;\n\n    // Events for whitelist management\n    event AddedToWhitelist(address indexed user);\n    event RemovedFromWhitelist(address indexed user);\n\n    constructor(ICLPoolManager _poolManager) CLBaseHook(_poolManager) Ownable(msg.sender) {}\n\n    // Function to get the hooks registration bitmap\n    function getHooksRegistrationBitmap() external pure override returns (uint16) {\n        return _hooksRegistrationBitmapFrom(\n            Permissions({\n                beforeInitialize: false,\n                afterInitialize: false,\n                beforeAddLiquidity: true,\n                afterAddLiquidity: false,\n                beforeRemoveLiquidity: true,\n                afterRemoveLiquidity: false,\n                beforeSwap: true,\n                afterSwap: false,\n                beforeDonate: false,\n                afterDonate: false,\n                beforeSwapReturnsDelta: false,\n                afterSwapReturnsDelta: false,\n                afterAddLiquidityReturnsDelta: false,\n                afterRemoveLiquidityReturnsDelta: false\n            })\n        );\n    }\n\n    // Function to add an address to the whitelist\n    function addToWhitelist(address _user) external onlyOwner {\n        require(!whitelisted[_user], \"User is already whitelisted\");\n        whitelisted[_user] = true;\n        emit AddedToWhitelist(_user);\n    }\n\n    // Function to remove an address from the whitelist\n    function removeFromWhitelist(address _user) external onlyOwner {\n        require(whitelisted[_user], \"User is not whitelisted\");\n        whitelisted[_user] = false;\n        emit RemovedFromWhitelist(_user);\n    }\n\n    // Hook function called before adding liquidity\n    function beforeAddLiquidity(address sender, PoolKey calldata, ICLPoolManager.ModifyLiquidityParams calldata, bytes calldata)\n        external\n        override\n        view\n        returns (bytes4)\n    {\n        require(whitelisted[sender], \"Sender is not whitelisted\");\n        return CLBaseHook.beforeAddLiquidity.selector;\n    }\n\n    // Hook function called before removing liquidity\n    function beforeRemoveLiquidity(address sender, PoolKey calldata, ICLPoolManager.ModifyLiquidityParams calldata, bytes calldata)\n        external\n        override\n        view\n        returns (bytes4)\n    {\n        require(whitelisted[sender], \"Sender is not whitelisted\");\n        return CLBaseHook.beforeRemoveLiquidity.selector;\n    }\n\n    // Hook function called before swapping\n    function beforeSwap(address sender, PoolKey calldata, ICLPoolManager.SwapParams calldata, bytes calldata)\n        external\n        override\n        view\n        returns (bytes4, BeforeSwapDelta, uint24)\n    {\n        require(whitelisted[sender], \"Sender is not whitelisted\");\n        return (CLBaseHook.beforeSwap.selector, BeforeSwapDeltaLibrary.ZERO_DELTA, 0);\n    }\n   function validateHookAddress(CLBaseHook _this) internal pure {\n            }\n        }"
}